kubectl create deployment flaskapp-dep --image=prashant887/flaskimage:1.0 
kubectl get deployments 
kubectl get pods 
kubectl logs <pod> 

kubectl create -f ngix-deployment.yaml 
deployment yaml / service 

kubectl describe service flaskapp-service 

3 parts 
1. Metadata 
2. Specification 
3. Status -> k8s generates based on status actual and desired


all pod/image info are specifed inside spec/template

spec-1 : deployment 
spec-2 : container 

Label and selectors

kubectl create namespace <name> 
namespace -> cluster inside cluster 

ingress -> used to expose pods as external service via app-name/service-name then  ip/ports(internal service)

helm -> package manager for k8s where yaml can be shipped for different deploymets

Kubernetes Services 
pods have own ips , ips change everytime pods are created , services provides static ip address 
- stable ipaddress
- load balancing 
- lose coupling 
- with and within cluster 

ClusterIP -> Default IP 
Ingress access pods via service/ClusterIP  service has selector , which is equal to label in deployment
access within pods alone , cant be accessed from outside 

metadata->name in Service should match in ServiceName/backend in Ingress

if a pod has multiple contianers , in service ports has to be defined with contianer names 

Headless Service: Commuincate to one of the pod directly from outside , or pod communicate with in itself without services 
DB/Staeful apps , for sync b/w master and slave pods  for direct access

Setting ClusterIP:None , returns Pod IP address and not service IP , so that Pods are directly accessed

ClusterIP -> Default , to communcate within cluset , internal service , no external traffic can access 
NodePort -> Creates services accessable on static port on each workedr node in cluster , external traffic accessable on static port , no ingress is used , not secure 
LoadBalancer -> in cloud 


Volumes 
-----------
i. Create Persistant Volume , its a common resource no namespace
ii. Create Persistant Volume Claim namespace

StorageClass is used to define if stroage has to dynamically created or developers has to define it bring in own storage, its provisioner of storage 

Static Provising -> Cluster Admin creates PV
Storage Class -> Volumes are provisioned , dynamic provising AWS , Stroage Class created by admin and use it in PVC

if a pvc is deleted and new pvc is created , if pv was created as retained new pvc cant claim pv

Retian policy 
Retain -> Default 
Recycl -> 
Delete -> Deletes volume and data , host path should be always /tmp/<>

Access Mode
RWO -> Read by all Node , Write only by first node  
RWM -> Read/Write by all nodes 
RO -> Read only 


kubectl patch pv <your-pv-name> -p '{"spec":{"persistentVolumeReclaimPolicy":"Retain"}}'


